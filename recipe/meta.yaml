{% set name = "libcurand" %}
{% set version = "10.3.5.147" %}
{% set cuda_version = "12.4" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set target_name = "x86_64-linux" %}  # [linux64]
{% set target_name = "ppc64le-linux" %}  # [ppc64le]
{% set target_name = "sbsa-linux" %}  # [aarch64]
{% set target_name = "x64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cuda/redist/{{ name }}/{{ platform }}/{{ name }}-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: f3752abef1ffae7bc9180bd9885905e971cc9c28d7f4d5860731a012e07638a3  # [linux64]
  sha256: 42ed22ceebcb1840b391cb4369a41e6ed1ae31c5aae0b66fe15ba242db06c4d9  # [ppc64le]
  sha256: ee337fa4c53136e336f974ba5d1a9be2a1ec5da674be3bb972a8d645051bbfae  # [aarch64]
  sha256: 24c3b0fb7063e49ccc0ac1bff387c5f4fd9617b72aab3fa3b642f08607770ad3  # [win]

build:
  number: 0
  binary_relocation: false
  skip: true  # [osx]

test:
  requires:
    - patchelf  # [linux]
  files:
    - test-rpath.sh
  commands:
    - test -L $PREFIX/lib/libcurand.so.{{ version.split(".")[0] }}                            # [linux]
    - test -L $PREFIX/lib/libcurand.so.{{ version }}                                          # [linux]
    - test -L $PREFIX/targets/{{ target_name }}/lib/libcurand.so.{{ version.split(".")[0] }}  # [linux]
    - test -f $PREFIX/targets/{{ target_name }}/lib/libcurand.so.{{ version }}                # [linux]
    - bash test-rpath.sh                                                                      # [linux]
    - if not exist %LIBRARY_BIN%\curand64_{{ version.split(".")[0] }}.dll exit 1              # [win]

outputs:
  - name: libcurand
    files:
      # Include SONAME and full name libraries, but not the linker name. That
      # goes in the -dev package.
      - lib/libcurand.so.*                            # [linux]
      - targets/{{ target_name }}/lib/libcurand.so.*  # [linux]
      - Library\bin\curand*.dll                       # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - sysroot_{{ target_platform }} 2.17    # [linux]
        - patchelf <0.18.0                      # [linux]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    # Tests are defined at the top level, due to package/output name conflicts.
    about:
      home: https://developer.nvidia.com/curand
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_file: LICENSE
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: cuRAND native runtime libraries
      description: |
        cuRAND native runtime libraries
      doc_url: https://docs.nvidia.com/cuda/curand/

  - name: libcurand-dev
    build:
      run_exports:
        - {{ pin_subpackage("libcurand", max_pin="x") }}
    files:
      - lib/libcurand.so                            # [linux]
      - lib/pkgconfig                               # [linux]
      - targets/{{ target_name }}/include           # [linux]
      - targets/{{ target_name }}/lib/libcurand.so  # [linux]
      - targets/{{ target_name }}/lib/stubs         # [linux]
      - Library\include                             # [win]
      - Library\lib                                 # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - sysroot_{{ target_platform }} 2.17    # [linux]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - {{ pin_subpackage("libcurand", exact=True) }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - libcurand-static >={{ version }}      # [linux]
    test:
       commands:
         - test -L $PREFIX/lib/libcurand.so                                    # [linux]
         - test -f $PREFIX/targets/{{ target_name }}/include/curand.h          # [linux]
         - test -L $PREFIX/targets/{{ target_name }}/lib/libcurand.so          # [linux]
         - test -f $PREFIX/targets/{{ target_name }}/lib/stubs/libcurand.so    # [linux]
         - if not exist %LIBRARY_INC%\curand.h exit 1                          # [win]
         - if not exist %LIBRARY_LIB%\curand.lib exit 1                        # [win]
    about:
      home: https://developer.nvidia.com/curand
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_file: LICENSE
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: cuRAND native runtime libraries
      description: |
        cuRAND native runtime libraries
      doc_url: https://docs.nvidia.com/cuda/curand/

  - name: libcurand-static
    build:
      skip: True  # [not linux]
    files:
      - targets/{{ target_name }}/lib/libcurand_static.a
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - sysroot_{{ target_platform }} 2.17    # [linux]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -f $PREFIX/targets/{{ target_name }}/lib/libcurand_static.a
    about:
      home: https://developer.nvidia.com/curand
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_file: LICENSE
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: cuRAND native runtime libraries
      description: |
        cuRAND native runtime libraries
      doc_url: https://docs.nvidia.com/cuda/curand/

about:
  home: https://developer.nvidia.com/curand
  license_file: LICENSE
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: cuRAND native runtime libraries
  description: |
    cuRAND native runtime libraries
  doc_url: https://docs.nvidia.com/cuda/curand/

extra:
  recipe-maintainers:
    - conda-forge/cuda
